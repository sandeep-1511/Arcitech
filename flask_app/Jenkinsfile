pipeline {
    agent any
    stages {
        stage('Clone Repository') {
            steps {
                git branch:  'main',  url:'https://github.com/sandeep-1511/Arcitech.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh '''
                #!/bin/bash
                cd ${WORKSPACE}
                python3 -m venv venv
                . venv/bin/activate
                pip install flask gunicorn
                '''
            }
        }
        stage('Run Tests') {
            steps {
                sh '''
                #!/bin/bash
                . ${WORKSPACE}/venv/bin/activate
                # Add test commands here, for example:
                # python -m unittest discover
                echo "Running tests..."
                '''
            }
        }
        stage('Deploy Application') {
            steps {
                sh '''
                #!/bin/bash
                # Create the systemd service file for Gunicorn
                sudo bash -c 'cat > /etc/systemd/system/flask_app.service <<EOF
                [Unit]
                Description=Gunicorn instance to serve Flask app
                After=network.target

                [Service]
                User=ubuntu
                Group=www-data
                WorkingDirectory=${WORKSPACE}
                Environment="PATH=${WORKSPACE}/venv/bin"
                ExecStart=${WORKSPACE}/venv/bin/gunicorn --workers 3 --bind 127.0.0.1:8000 flask_app.hello:app

                [Install]
                WantedBy=multi-user.target
                EOF'

                # Reload systemd to apply the new service file
                sudo systemctl daemon-reload

                # Restart Nginx and Gunicorn services
                sudo systemctl restart nginx
                sudo systemctl restart flask_app
                '''
            }
        }
    }
}
