pipeline {
    agent any
    stages {
        stage('Clone Repository') {
            steps {
                git branch:  'main',  url:'https://github.com/sandeep-1511/Arcitech.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh '''
                #!/bin/bash
                cd ${WORKSPACE}
                python3 -m venv venv
                . venv/bin/activate
                pip install flask gunicorn
                '''
            }
        }
        stage('Run Tests') {
            steps {
                sh '''
                #!/bin/bash
                . ${WORKSPACE}/venv/bin/activate
                # Add test commands here, for example:
                # python -m unittest discover
                echo "Running tests..."
                '''
            }
        }
        stage('Deploy Application') {
            steps {
                script {
                    def serviceFile = """
                    [Unit]
                    Description=Gunicorn instance to serve Flask app
                    After=network.target

                    [Service]
                    User=ubuntu
                    Group=www-data
                    WorkingDirectory=${WORKSPACE}
                    Environment='PATH=${WORKSPACE}/venv/bin'
                    ExecStart=${WORKSPACE}/venv/bin/gunicorn --workers 3 --bind 127.0.0.1:8000 flask_app.hello:app

                    [Install]
                    WantedBy=multi-user.target
                    """

                    // Write the service file
                    writeFile file: 'flask_app.service', text: serviceFile

                    // Create/Update the systemd service file
                    sh 'sudo mv flask_app.service /etc/systemd/system/flask_app.service'
                    sh 'sudo systemctl daemon-reload'
                    sh 'sudo systemctl restart nginx'
                    sh 'sudo systemctl restart flask_app'
                }
            }
        }          
    }
}
